<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dataset.mapper.AdminMonitorMapper">
    <select id="getDownloadMonitor" resultType="com.example.dataset.VO.DownloadMonitorVO">
        <choose>
            <when test="type == 'day'">
                SELECT
                date_series::date AS Date,
                COALESCE(downloads.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 days',
                CURRENT_TIMESTAMP,
                INTERVAL '1 day'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('day', download_time) AS Date,
                COUNT(*) AS Count
                FROM
                downloads
                GROUP BY
                Date
                ) downloads ON date_series::date = downloads.Date
                ORDER BY
                Date;
            </when>
            <when test="type == 'week'">
                SELECT
                date_series::date AS Date,
                COALESCE(downloads.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 weeks',
                CURRENT_TIMESTAMP,
                INTERVAL '1 week'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('week', download_time) AS Date,
                COUNT(*) AS Count
                FROM
                downloads
                GROUP BY
                Date
                ) downloads ON date_trunc('week', date_series::date) = downloads.Date
                ORDER BY
                Date;
            </when>
            <when test="type == 'month'">
                SELECT
                date_series::date AS Date,
                COALESCE(downloads.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 months',
                CURRENT_TIMESTAMP,
                INTERVAL '1 month'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('month', download_time) AS Date,
                COUNT(*) AS Count
                FROM
                downloads
                GROUP BY
                Date
                ) downloads ON date_trunc('month', date_series::date) = downloads.Date
                ORDER BY
                Date;
            </when>
            <otherwise>
                SELECT NULL AS Date, NULL AS Count;
            </otherwise>
        </choose>
    </select>

    <select id="getArticleMonitor" resultType="com.example.dataset.VO.ArticleMonitorVO">
        <choose>
            <when test="type == 'day'">
                SELECT
                date_series::date AS Date,
                COALESCE(materials.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 days',
                CURRENT_TIMESTAMP,
                INTERVAL '1 day'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('day', publish_time) AS Date,
                COUNT(*) AS Count
                FROM
                materials
                GROUP BY
                Date
                ) materials ON date_series::date = materials.Date
                ORDER BY
                Date;
            </when>
            <when test="type == 'week'">
                SELECT
                date_series::date AS Date,
                COALESCE(materials.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 weeks',
                CURRENT_TIMESTAMP,
                INTERVAL '1 week'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('week', publish_time) AS Date,
                COUNT(*) AS Count
                FROM
                materials
                GROUP BY
                Date
                ) materials ON date_trunc('week', date_series::date) = materials.Date
                ORDER BY
                Date;
            </when>
            <when test="type == 'month'">
                SELECT
                date_series::date AS Date,
                COALESCE(materials.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 months',
                CURRENT_TIMESTAMP,
                INTERVAL '1 month'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('month', publish_time) AS Date,
                COUNT(*) AS Count
                FROM
                materials
                GROUP BY
                Date
                ) materials ON date_trunc('month', date_series::date) = materials.Date
                ORDER BY
                Date;
            </when>
            <otherwise>
                SELECT NULL AS Date, NULL AS Count;
            </otherwise>
        </choose>
    </select>

    <select id="getUserMonitor" resultType="com.example.dataset.VO.UserMonitorVO">
        <choose>
            <when test="type == 'day'">
                SELECT
                date_series::date AS Date,
                COALESCE(users.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 days',
                CURRENT_TIMESTAMP,
                INTERVAL '1 day'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('day', gen_time) AS Date,
                COUNT(*) AS Count
                FROM
                users
                GROUP BY
                Date
                ) users ON date_series::date = users.Date
                ORDER BY
                Date;
            </when>
            <when test="type == 'week'">
                SELECT
                date_series::date AS Date,
                COALESCE(users.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 weeks',
                CURRENT_TIMESTAMP,
                INTERVAL '1 week'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('week', gen_time) AS Date,
                COUNT(*) AS Count
                FROM
                users
                GROUP BY
                Date
                ) users ON date_trunc('week', date_series::date) = users.Date
                ORDER BY
                Date;
            </when>
            <when test="type == 'month'">
                SELECT
                date_series::date AS Date,
                COALESCE(users.Count, 0) AS Count
                FROM
                generate_series(
                CURRENT_TIMESTAMP - INTERVAL '10 months',
                CURRENT_TIMESTAMP,
                INTERVAL '1 month'
                ) AS date_series
                LEFT JOIN (
                SELECT
                date_trunc('month', gen_time) AS Date,
                COUNT(*) AS Count
                FROM
                users
                GROUP BY
                Date
                ) users ON date_trunc('month', date_series::date) = users.Date
                ORDER BY
                Date;
            </when>
            <otherwise>
                SELECT NULL AS Date, NULL AS Count;
            </otherwise>
        </choose>
    </select>
</mapper>